{"version":3,"sources":["webpack:///./node_modules/rfuncs/functions/is_string.js","webpack:///./node_modules/rfuncs/functions/partial.js","webpack:///./node_modules/rfuncs/functions/ordered_object.js","webpack:///./node_modules/rfuncs/functions/keys.js","webpack:///./node_modules/rfuncs/functions/scan.js","webpack:///./node_modules/rfuncs/functions/values.js","webpack:///./node_modules/rfuncs/functions/is_null.js","webpack:///./node_modules/rfuncs/functions/to_array.js","webpack:///./node_modules/rfuncs/functions/map.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/rfuncs/functions/merge.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/rfuncs/functions/is_iterator.js","webpack:///./node_modules/rfuncs/functions/is_function.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/rfuncs/functions/is_array.js","webpack:///./node_modules/rfuncs/functions/items.js","webpack:///./node_modules/rfuncs/functions/is_object.js","webpack:///./node_modules/rangetouch/dist/rangetouch.js","webpack:///./node_modules/rfuncs/functions/is_element.js"],"names":["is_string","obj","partial","func","pre","post","set","keys","prop","value","indexOf","push","deleteProperty","i","splice","ordered_object","iterable","scan","k","Proxy","ownKeys","data","f","is_iterator","index","is_object","is_element","forEach","key","to_array","is_null","undefined","_to_array","is_array","array","is_function","values","arguments","length","reduce","a","b","concat","map","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","isEffect","fn","_isEffect","options","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","includes","enableTracking","pop","resetTracking","id","allowRecurse","deps","delete","shouldTrack","trackStack","pauseTracking","last","track","target","type","depsMap","get","Map","dep","Set","has","add","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","builtInSymbols","Object","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","method","Array","prototype","args","arr","toRaw","this","l","apply","createSetter","shallowSet","hadKey","Number","result","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","call","has$1","size","proto","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","isReactive","isProxy","r","Boolean","__v_isRef","unref","ref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","newVal","toRef","object","ComputedRefImpl","getter","_setter","_dirty","_value","getterOrOptions","setter","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","catch","throwInDev","contextVNode","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","console","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","bind","queueJob","job","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","event","rawArgs","props","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","replace","toLowerCase","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","children","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","default","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","renderSlot","name","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","Fragment","_","vnodes","withCtx","renderFnWithContext","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","toString","isSameType","expectedTypes","len","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","__isKeepAlive","RegExp","matches","pattern","split","test","onActivated","registerKeepAliveHook","onDeactivated","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","directives","internalInstance","bindings","dir","arg","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","binding","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","getNextHostNode","unmount","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","treeOwnerId","__scopeId","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","m","hydrateNode","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","onVnodeUnmounted","removeFragment","performRemove","end","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","blockStack","currentBlock","disableTracking","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","provide","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","defineProperty","enumerable","configurable","createWatcher","callHookFromMixins","base","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","path","segments","resolveMergedOptions","__merged","mergeOptions","to","strats","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","displayName","h","propsOrChildren","renderList","renderItem","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","join","className","patchStyle","cssText","setStyle","removeAttribute","importantRE","val","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","e","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","assign","found","filtered","getCheckboxValue","setChecked","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","self","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","left","button","middle","right","exact","withModifiers","guard","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","Element","merge","makeMap","str","expectsLowerCase","list","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","findIndex","toDisplayString","JSON","stringify","replacer","isMap","entries","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","def","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","global","g","module","exports","t","enabled","addCSS","thumbWidth","selectors","range","events","toFixed","round","HTMLElement","changedTouches","getAttribute","getBoundingClientRect","width","clientX","CustomEvent","bubbles","cancelable","detail","initCustomEvent","Event","documentElement","appendChild","head","sheet","insertRule","element","HTMLDocument"],"mappings":"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","file":"js/chunk-vendors.485c90bd.js","sourcesContent":["export default function is_string(obj) {\n  return typeof obj === \"string\"\n}\n","export default function partial(func, ...pre) {\n  return (...post) => func(...pre, ...post)\n}\n","import scan from \"./scan\"\nimport partial from \"./partial\"\n\nconst set = (keys, obj, prop, value) => {\n  prop = prop + \"\"\n  if (keys.indexOf(prop) < 0) {\n    keys.push(prop)\n  }\n  obj[prop] = value\n  return true\n}\n\nconst deleteProperty = (keys, obj, prop) => {\n  prop = prop + \"\"\n  const i = keys.indexOf(prop)\n  if (i >= 0) {\n    keys.splice(i, 1)\n  }\n  delete obj[prop]\n  return true\n}\n\nexport default function ordered_object(iterable) {\n  let obj = {}\n  let keys = []\n  scan(i => {\n    const k = i[0] + \"\"\n\n    obj[k] = i[1]\n\n    if (keys.indexOf(k) < 0) {\n      keys.push(k)\n    }\n  }, iterable)\n  return new Proxy(obj, {\n    set: partial(set, keys),\n    deleteProperty: partial(deleteProperty, keys),\n    ownKeys: () => keys,\n  })\n}\n","export default data => Object.keys(data)\n","import to_array from \"./to_array\"\nimport keys from \"./keys\"\nimport is_object from \"./is_object\"\nimport is_iterator from \"./is_iterator\"\nimport is_element from \"./is_element\"\n\nexport default function scan(f, iterable) {\n  if (is_iterator(iterable)) {\n    let index = 0\n    for (let value of iterable) {\n      f(value, index)\n      index++\n    }\n  } else if (is_object(iterable) && !is_element(iterable)) {\n    keys(iterable).forEach(key => f(iterable[key], key))\n  } else {\n    to_array(iterable).forEach(f)\n  }\n}\n","export default data => Object.values(data)\n","export default function is_null(obj) {\n  return obj == null || obj == undefined\n}\n","import is_array from \"./is_array\"\nimport is_object from \"./is_object\"\nimport is_iterator from \"./is_iterator\"\nimport is_element from \"./is_element\"\nimport is_function from \"./is_function\"\nimport is_null from \"./is_null\"\nimport values from \"./values\"\n\nfunction _to_array(iterable) {\n  if (is_array(iterable)) {\n    return iterable\n  }\n  if (is_iterator(iterable)) {\n    const array = []\n    for (let value of iterable) {\n      array.push(value)\n    }\n    return array\n  }\n  if (is_function(iterable) || is_element(iterable)) {\n    return [iterable]\n  }\n  if (is_object(iterable)) {\n    return values(iterable)\n  }\n  if (is_null(iterable)) {\n    return []\n  }\n  return [iterable]\n}\n\nexport default function to_array() {\n  if (arguments.length == 1) {\n    return _to_array(arguments[0])\n  }\n  return _to_array(arguments)\n    .reduce((a, b) => a.concat(_to_array(b)), [])\n}\n","import to_array from \"./to_array\"\nimport is_object from \"./is_object\"\nimport is_iterator from \"./is_iterator\"\nimport is_function from \"./is_function\"\nimport is_element from \"./is_element\"\nimport items from \"./items\"\nimport ordered_object from \"../functions/ordered_object\"\n\nexport default function map(f, iterable) {\n  // we want to return a new object if iterable is an object\n\n  if (\n    is_object(iterable) &&\n    !is_iterator(iterable) &&\n    !is_function(iterable) &&\n    !is_element(iterable)\n  ) {\n    return ordered_object(items(iterable).map(a => [a[0], f(a[1], a[0])]))\n  }\n  return to_array(iterable).map(f)\n}\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') && result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => i && (i.proxy ? i.proxy : getPublicInstance(i.parent));\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.5\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (transition && value !== oldValue) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import items from \"../functions/items\"\nimport ordered_object from \"../functions/ordered_object\"\n\nexport default function merge(...args) {\n  return ordered_object(args.reduce((a, b) => a.concat(items(b)), []))\n}\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import is_function from \"./is_function\"\n\nexport default function is_iterator(obj) {\n  if (obj) {\n    return is_function(obj.next)\n  }\n  return false\n}\n","export default function is_function(obj) {\n  return typeof obj === \"function\"\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export default function is_array(obj) {\n  return obj instanceof Array\n}\n","export default data => Object.entries(data)\n","import is_array from \"./is_array\"\n\nexport default function is_object(obj) {\n  return obj instanceof Object && !is_array(obj)\n}\n","!function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=t(e,document):\"function\"==typeof define&&define.amd?define(null,function(){t(e,document)}):e.rangetouch=t(e,document)}(\"undefined\"!=typeof window?window:this,function(e,t){\"use strict\";var n={enabled:!0,addCSS:!0,thumbWidth:15,selectors:{range:'[type=\"range\"]',disabled:\".rangetouch--disabled\"},events:{start:\"touchstart\",move:\"touchmove\",end:\"touchend\"}};function o(e,t,n){e.addEventListener(t,n,!1)}function a(e,t){if(t<1){var n=(o=(\"\"+t).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/))?Math.max(0,(o[1]?o[1].length:0)-(o[2]?+o[2]:0)):0;return parseFloat(e.toFixed(n))}var o;return Math.round(e/t)*t}function d(o){var d;n.enabled&&\"range\"===o.target.type&&((d=o.target)instanceof HTMLElement&&!d.matches(n.selectors.disabled)&&!d.disabled)&&(o.preventDefault(),o.target.value=function(e){var t,o=e.target,d=e.changedTouches[0],i=parseFloat(o.getAttribute(\"min\"))||0,r=parseFloat(o.getAttribute(\"max\"))||100,u=parseFloat(o.getAttribute(\"step\"))||1,s=r-i,c=o.getBoundingClientRect(),l=100/c.width*(n.thumbWidth/2)/100;return(t=100/c.width*(d.clientX-c.left))<0?t=0:t>100&&(t=100),t<50?t-=(100-2*t)*l:t>50&&(t+=2*(t-50)*l),i+a(s*(t/100),u)}(o),function(n,o,a){if(n&&o){var d;\"function\"==typeof e.CustomEvent?d=e.CustomEvent:(d=function(e,n){n=n||{bubbles:!1,cancelable:!1,detail:void 0};var o=t.createEvent(\"CustomEvent\");return o.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),o}).prototype=e.Event.prototype;var i=new d(o,{bubbles:!0,detail:a});n.dispatchEvent(i)}}(o.target,o.type===n.events.end?\"change\":\"input\"))}return function(){if(\"ontouchstart\"in t.documentElement){var e;n.addCSS&&((e=t.createElement(\"style\")).appendChild(t.createTextNode(\"\")),t.head.appendChild(e),e.sheet).insertRule([n.selectors.range,\":not(\",n.selectors.disabled,\")\"].join(\"\")+\" { user-select: none; -webkit-user-select: none; touch-action: manipulation; }\",0),o(t.body,n.events.start,d),o(t.body,n.events.move,d),o(t.body,n.events.end,d)}}(),{set:function(e,t){n[e]=t}}});","export default function is_element(element) {\n  try {\n    //Using W3 DOM2 (works for FF, Opera and Chrome)\n    return element instanceof Element || element instanceof HTMLDocument\n  } catch (e) {\n    // nodejs can't do that\n    return false\n  }\n}\n"],"sourceRoot":""}